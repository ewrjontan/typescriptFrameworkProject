{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADUA,IAAA,IAAA;ACRA,ADQA,ICRM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;AAAC,ADQvB,ECRuB,IAAI,EAAE,IDQ7B,ICRsB;AAAiB,ADWnC,ECXmC,GAAG,EAAE;AAAtB,ADYlB,CCZS,CAAb,SDYI,IAAA,CAAoB,IAApB,EAAmC;ACVvC,ADUwB,ICVpB,CAAC,EAAL,CAAQ,CDUgB,IAAA,GCVxB,ADUwB,ECVN,EDUM,UCVN;AACd,ADMA,ECNA,OAAO,ADMP,CCNQ,GAAR,CAAY,CDMZ,GAAuC,EAAvC,KCNA;AACH,ADQyC,CCV1C;AAGA,IAAI,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AACd,ADQA,ECRA,ADQA,IAAA,CAAA,ECRO,CAAC,GAAR,CAAY,EDQZ,CAAA,GAAA,GAAA,ECRA,QDQI,QAAJ,EAAoB;ACPvB,ADQO,CCVR,UDUe,KAAK,IAAL,CAAU,QAAV,CAAP;ACPR,ADQK,GAFD,CCNA,CAAC,EAAL,CAAQ,MAAR,EAAgB,YAAA;AACZ,EAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ;AACH,ADQG,CCVJ,CDUI,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAqB;ACJzB,ADMQ,ICNJ,ADMI,CCNH,KDMS,CAAC,CCNf,CAAa,IDML,CAAc,KAAK,CCN3B,GDMQ,EAAyB,MAAzB;AACH,GAHD;;AAKA,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACpC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACH,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACrB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AAEA,QAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AACpC;AACH;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,QAAA,EAAQ;AACrB,MAAA,QAAQ;AACX,KAFD;AAGH,GAVD;;AAWJ,SAAA,IAAA;AAhCA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\r\n    //question marks make properties optional\r\n    name?: string,\r\n    age?: number\r\n}\r\n\r\n//type alias used for type annotation\r\ntype Callback = () => void;\r\n\r\n\r\nexport class User {\r\n    events: {[key: string]: Callback[] } = {};\r\n\r\n    // set to private so other engineers can't just access user data\r\n    constructor(private data: UserProps){}\r\n\r\n    get(propName: string): (number | string) {\r\n        return this.data[propName];\r\n    }\r\n\r\n    set(update: UserProps): void {\r\n\r\n        Object.assign(this.data, update);\r\n    }\r\n\r\n    on(eventName: string, callback: Callback): void {\r\n        const handlers = this.events[eventName] || [];\r\n        handlers.push(callback);\r\n        this.events[eventName] = handlers;\r\n    }\r\n\r\n    trigger(eventName: string): void {\r\n        const handlers = this.events[eventName];   \r\n\r\n        if (!handlers || handlers.length === 0) {\r\n            return;\r\n        }\r\n\r\n        handlers.forEach(callback => {\r\n            callback();\r\n        })\r\n    }\r\n}","import { User } from \"./models/User\";\r\n\r\nconst user = new User({name: 'jontan', age: 20});\r\n\r\nuser.on('change', () => {\r\n    console.log('change #1');\r\n});\r\nuser.on('change', () => {\r\n    console.log('change #2');\r\n});\r\nuser.on('save', () => {\r\n    console.log('save was triggered');\r\n});\r\n\r\n\r\n\r\nuser.trigger('asdasdasd');"]}